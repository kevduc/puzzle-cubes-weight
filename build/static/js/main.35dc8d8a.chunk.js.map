{"version":3,"sources":["utils/utils.js","components/Cube.jsx","components/Pan.jsx","components/Scale.jsx","components/Shelf.jsx","App.jsx","index.js"],"names":["min","max","Cube","props","name","weight","className","onClick","special","WeightContext","Consumer","showWeights","e","stopPropagation","Math","ceil","formatWeight","Pan","cubes","onCubeClick","map","cube","id","key","tiltMap","left","right","none","Scale","selectedSide","onPanClick","tilt","side","idx","tiltClass","cubeId","filter","location","Shelf","initialState","Array","keys","specialCubeId","NumCubes","floor","random","pow","React","createContext","App","state","_","cloneDeep","reset","setState","toggleShowWeights","selectPan","deselectPans","handleScaleCubeClick","newCubes","handleShelfCubeClick","this","panWeights","reduce","totalWeight","Provider","value","type","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35dc8d8a.chunk.js","sourcesContent":["export const randInt = (min, max) => Math.floor(Math.random() * (max + 1 - min) + min)\r\n\r\nexport const formatWeight = (weight) => `${Math.ceil(weight * 10)}g`\r\n","import React from 'react'\r\nimport { formatWeight } from '../utils/utils'\r\nimport { WeightContext } from './../App'\r\n\r\nconst Cube = (props) => {\r\n  const { name, weight, className, onClick, special } = props\r\n  return (\r\n    <WeightContext.Consumer>\r\n      {(showWeights) => (\r\n        <div\r\n          onClick={(e) => {\r\n            onClick()\r\n            e.stopPropagation()\r\n          }}\r\n          className={`cube cursor-pointer rounded-lg d-flex justify-content-center align-items-center p-1 ${className || ''} ${\r\n            showWeights && special ? `special-${weight > 1 ? 'heavier' : 'lighter'}` : ''\r\n          }`}>\r\n          <p className=\"m-0\">{showWeights ? formatWeight(weight) : name}</p>\r\n        </div>\r\n      )}\r\n    </WeightContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default Cube\r\n","import React from 'react'\r\nimport Cube from './Cube'\r\n\r\nconst Pan = (props) => {\r\n  const { className, cubes, onCubeClick } = props\r\n\r\n  return (\r\n    <div\r\n      className={`pan d-flex flex-row justify-content-center align-items-end flex-wrap-reverse align-content-start ${\r\n        className || ''\r\n      }`}>\r\n      {cubes.map((cube) => (\r\n        <Cube onClick={() => onCubeClick(cube.id)} key={cube.id} className=\"cube-sm\" {...cube} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pan\r\n","import React from 'react'\r\nimport Pan from './Pan'\r\n\r\nconst tiltMap = {\r\n  left: ['down', 'up'],\r\n  right: ['up', 'down'],\r\n  none: ['middle', 'middle'],\r\n}\r\n\r\nconst Scale = (props) => {\r\n  const { selectedSide, className, onPanClick, onCubeClick, cubes, tilt } = props\r\n\r\n  return (\r\n    <div className={`scale d-flex flex-row justify-content-between align-items-stretch ${className || ''}`}>\r\n      {['left', 'right'].map((side, idx) => {\r\n        const tiltClass = `pan-base-${tiltMap[tilt][idx]}`\r\n\r\n        return (\r\n          <div key={side} className={`d-flex flex-column justify-content-end align-items-stretch`}>\r\n            <Pan\r\n              onCubeClick={(cubeId) => onCubeClick(cubeId, side)}\r\n              cubes={cubes.filter(({ location }) => location === `${side}-pan`)}\r\n            />\r\n            <div\r\n              onClick={(e) => {\r\n                onPanClick(side)\r\n                e.stopPropagation()\r\n              }}\r\n              className={`pan-base cursor-pointer flex-shrink-0 d-flex flex-column justify-content-stretch align-items-center ${\r\n                side === selectedSide ? 'selected' : ''\r\n              }`}>\r\n              <div className={`border border-dark ${tiltClass}`}></div>\r\n            </div>\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scale\r\n","import React from 'react'\r\nimport Cube from './Cube'\r\n\r\nconst Shelf = (props) => {\r\n  const { className, cubes, onCubeClick } = props\r\n\r\n  return (\r\n    <div className={`shelf d-flex flex-row flex-wrap justify-content-center align-items-center mx-2 ${className}`}>\r\n      {cubes.map((cube) => (\r\n        <Cube onClick={() => onCubeClick(cube.id)} key={cube.id} {...cube} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Shelf\r\n","import React, { Component } from 'react'\nimport Scale from './components/Scale'\nimport Shelf from './components/Shelf'\n\nimport { randInt } from './utils/utils'\nimport _ from 'lodash'\n\nconst NumCubes = 12\n\nconst initialState = {\n  selectedSide: 'left',\n  cubes: [...new Array(NumCubes).keys()].map((idx) => ({ id: idx, name: `${idx}`, weight: 1, location: 'shelf' })),\n  specialCubeId: randInt(0, NumCubes - 1),\n  showWeights: false,\n}\n\ninitialState.cubes[initialState.specialCubeId].weight = Math.pow(NumCubes, 2 * Math.random() - 1) // Can weight NumCubes times less or more than the other normal cubes (that weight 1)\ninitialState.cubes[initialState.specialCubeId].special = true\n\nexport const WeightContext = React.createContext(initialState.showWeights)\n\nclass App extends Component {\n  state = _.cloneDeep(initialState)\n\n  reset = () => {\n    this.setState(({ selectedSide }) => ({ ..._.cloneDeep(initialState), selectedSide }))\n  }\n\n  toggleShowWeights = () => {\n    this.setState(({ showWeights }) => ({ showWeights: !showWeights }))\n  }\n\n  selectPan = (side) => {\n    this.setState({ selectedSide: side })\n  }\n\n  deselectPans = () => {\n    // this.setState({ selectedSide: 'none' })\n  }\n\n  handleScaleCubeClick = (cubeId, side) => {\n    // console.debug(cubeId)\n    const newCubes = [...this.state.cubes]\n    newCubes[cubeId].location = 'shelf'\n    this.setState({ cubes: newCubes })\n  }\n\n  handleShelfCubeClick = (cubeId) => {\n    // console.debug(cubeId)\n    if (this.state.selectedSide === 'none') return\n    const newCubes = [...this.state.cubes]\n    newCubes[cubeId].location = `${this.state.selectedSide}-pan`\n    this.setState({ cubes: newCubes })\n  }\n\n  render() {\n    const { selectedSide, cubes, showWeights } = this.state\n\n    const panWeights = ['left', 'right'].map((side) =>\n      cubes.filter((cube) => cube.location === `${side}-pan`).reduce((totalWeight, { weight }) => totalWeight + weight, 0)\n    )\n    const tilt = panWeights[0] > panWeights[1] ? 'left' : panWeights[1] > panWeights[0] ? 'right' : 'none'\n\n    return (\n      <div onClick={this.deselectPans} className={`d-flex flex-column h-100 ${showWeights ? 'weight' : ''}`}>\n        <main className=\"d-flex flex-column justify-content-evenly align-items-center flex-nowrap flex-fill h-auto\">\n          <WeightContext.Provider value={showWeights}>\n            <Scale\n              onPanClick={this.selectPan}\n              onCubeClick={this.handleScaleCubeClick}\n              className=\"scale\"\n              cubes={cubes.filter((cube) => cube.location !== 'shelf')}\n              tilt={tilt}\n              selectedSide={selectedSide}\n            />\n            <Shelf\n              onCubeClick={this.handleShelfCubeClick}\n              className=\"shelf\"\n              cubes={cubes.filter((cube) => cube.location === 'shelf')}\n            />\n          </WeightContext.Provider>\n        </main>\n\n        <header className=\"d-flex flex-row justify-content-center flex-nowrap h-auto\">\n          <button type=\"button\" className=\"btn btn-primary m-2\" onClick={this.reset}>\n            Reset\n          </button>\n          <button type=\"button\" className=\"btn btn-primary m-2\" onClick={this.toggleShowWeights}>\n            {showWeights ? 'Hide' : 'Show'} Weights\n          </button>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './scss/main.scss'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}